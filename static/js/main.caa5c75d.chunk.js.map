{"version":3,"sources":["bg.jpg","home.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","default","ColorButton","Dropbox","accessToken","withStyles","theme","root","color","palette","getContrastText","common","white","backgroundColor","Button","useStyles","makeStyles","grow","flexGrow","title","fontFamily","clearButton","width","borderRadius","padding","fontSize","fontWeight","getButton","maxWidth","media","height","paper","spacing","margin","gridContainer","justifycontent","mainContainer","backgroundImage","bg","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","background","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","flexDirection","alignItems","appbar","loader","ImageUpload","classes","useState","selectedFile","setSelectedFile","preview","setPreview","data","setData","image","setImage","isLoading","setIsloading","file","setfile","fromDB","setDB","confidence","sendFile","a","formData","FormData","console","log","append","method","url","catch","error","res","status","alert","getImage","al","fetch","then","blob","bl","name","lastModified","Date","myFile","File","type","e","useEffect","objectUrl","window","URL","createObjectURL","undefined","parseFloat","toFixed","Fragment","AppBar","position","className","Toolbar","Typography","variant","noWrap","Container","disableGutters","Grid","container","direction","item","xs","Card","CardActionArea","CardMedia","component","CardContent","content","acceptedFiles","dropzoneText","onChange","files","length","appKey","success","thumbnailLink","onSelectDBFile","cancel","multiselect","extensions","size","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","class","CircularProgress","onClick","startIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caa5c75d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.fa273077.jpg\";","import { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport { Dropbox } from 'dropbox';\r\nimport bg from \"./bg.jpg\";\r\nimport im from \"./Late.jpg\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport  DropboxChooser  from \"react-dropbox-chooser\"\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\n\r\nconst accessToken = '';\r\nconst dbx = new Dropbox({ accessToken });\r\n\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(common.white),\r\n    backgroundColor: common.white,\r\n    '&:hover': {\r\n      backgroundColor: 'linear-gradient(45deg, #580358, transparent)',\r\n    },\r\n  },\r\n}))(Button);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title:{\r\n    fontFamily:\"Cabin, sans-serif\",\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n    fontFamily : \"Carter One , cursive\",\r\n  },\r\n  getButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"105px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 600,\r\n    fontFamily : \"Carter One , cursive\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifycontent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${bg})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  //image card is the image we got\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '22px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifycontent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appbar: {\r\n    background: 'linear-gradient(45deg, #580358, transparent)',\r\n    boxShadow: 'none',\r\n    color: 'white'\r\n  },\r\n  loader: {\r\n    color: '#be6a77 !important',\r\n  }\r\n}));\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const [file,setfile] = useState()\r\n  const [fromDB,setDB] = useState(false);\r\n  let confidence = 0;\r\n  //https://pdc-server.herokuapp.com/predict\r\n  const sendFile = async () => {\r\n    if (image) {\r\n\r\n      let formData = new FormData();\r\n      // console.log(\"Sending link\",selectedFile);\r\n      console.log(\"Sending file\",file);\r\n      formData.append(\"file\", file);\r\n\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: \"https://ldd-server.herokuapp.com/predict\",\r\n        data: formData,\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      if (res != null && res.status === 200) {\r\n        setData(res.data);\r\n        console.log(res.data);\r\n        setIsloading(false);\r\n      } else {\r\n        alert(\"Check your Internet connection!!\");\r\n        setIsloading(true);\r\n      }\r\n\r\n    }else{\r\n      console.log(\"Couldn't send1!!\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const getImage = async () => {\r\n    \r\n    if(fromDB){      \r\n      \r\n            const al = async()=>{\r\n\r\n            fetch(selectedFile,{ method : \"GET\"})\r\n              .then(res => res.blob())\r\n              .then(bl => {\r\n\r\n                bl.name = 'image.jpeg';\r\n                bl.lastModified = new Date(); \r\n                const myFile = new File([bl], 'image.jpeg', {\r\n                  type: 'image/jpg',              \r\n                }); \r\n                console.log(myFile  instanceof File , myFile );\r\n                setfile(myFile);\r\n\r\n              }).catch((e)=>{ console.log(e)} );\r\n      \r\n            \r\n            }\r\n            \r\n            al()\r\n            \r\n    //   let data = new File([im], 'image.jpg', {\r\n    //     type: 'image/jpeg',\r\n    // });\r\n   \r\n    //   console.log(data  instanceof File , data);\r\n    //   setfile(data);\r\n      setDB(false);\r\n    }else{\r\n      setfile(selectedFile);\r\n    }\r\n    \r\n    \r\n    // \r\n      \r\n    console.log(\"Blob set\")\r\n  }\r\n// Create Blob file from URL\r\n\r\n\r\n\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n\r\n  useEffect(()=>{\r\n  sendFile();\r\n  },[file])\r\n\r\n  \r\n  //2\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    // create obj image from url\r\n    if(fromDB){\r\n      setPreview(selectedFile); \r\n      console.log(fromDB);\r\n    }else{\r\n      try {\r\n        const objectUrl = window.URL.createObjectURL(selectedFile);\r\n        setPreview(objectUrl); \r\n      } catch (error) {\r\n        console.log('GOT URL ERROR!!!')\r\n      }\r\n       \r\n    }\r\n      \r\n    //setPreview(selectedFile);\r\n    console.log(\"file selected`!!\");\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    console.log(\"preview set\");\r\n    setIsloading(true);\r\n    getImage();\r\n  }, [preview]);\r\n\r\n  //1\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n\r\n    console.log(files,'Done');\r\n    setImage(true);\r\n\r\n    //setSelectedFile(files[0].thumbnailLink);\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    \r\n  };\r\n\r\n  const onSelectDBFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setDB(true);\r\n    console.log(files,'Done from DB');\r\n    setImage(true);\r\n    \r\n    setSelectedFile(files[0].thumbnailLink);\r\n    //setSelectedFile(files[0]);\r\n    console.log(files);\r\n    setData(undefined);\r\n    \r\n  };\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Leaf Disease Classification website\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifycontent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n\r\n              {image && <CardActionArea>\r\n\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={preview}\r\n                  component=\"img\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              }\r\n\r\n              {!image && <CardContent className={classes.content}>\r\n              <DropzoneArea\r\n                  acceptedFiles={['image/*']}\r\n                  dropzoneText={\"Drag and drop an image of a plant leaf to process\"}\r\n                  onChange={onSelectFile}\r\n                />\r\n                <DropboxChooser\r\n                  appKey={ 'pcwevk0ugf0wpes' }\r\n                  success={files => onSelectDBFile(files)}\r\n                  cancel={() => alert(\"Service canclled\")}\r\n                  multiselect={true}\r\n                  extensions={['.jpg']} >\r\n                  <div className=\"dropbox-button\"><ColorButton variant=\"contained\" className={classes.getButton} color=\"primary\" component=\"span\" size=\"large\"  >\r\n                Load Your Image!!\r\n              </ColorButton></div>\r\n                </DropboxChooser>\r\n                \r\n              </CardContent>}\r\n              {data && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Label:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.class}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell}>{confidence}%</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n              {isLoading && <CardContent className={classes.detail}>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  Processing\r\n                </Typography>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\" onClick={clearData} startIcon={<Clear fontSize=\"large\" />}>\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>}\r\n        </Grid >\r\n      \r\n      </Container >\r\n\r\n    </React.Fragment >\r\n  );\r\n};","import { ImageUpload } from \"./home\";\n\nfunction App() {\n  return <ImageUpload />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}